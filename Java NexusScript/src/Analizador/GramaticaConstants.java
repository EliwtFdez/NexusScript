/* Generated By:JavaCC: Do not edit this line. GramaticaConstants.java */
//analiza el codigo.txt

package Analizador;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GramaticaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int START = 5;
  /** RegularExpression Id. */
  int END = 6;
  /** RegularExpression Id. */
  int PR_INTERGER = 7;
  /** RegularExpression Id. */
  int PR_DECIMAL = 8;
  /** RegularExpression Id. */
  int PR_TXT = 9;
  /** RegularExpression Id. */
  int PR_IF = 10;
  /** RegularExpression Id. */
  int PR_ELSE = 11;
  /** RegularExpression Id. */
  int PR_FOR = 12;
  /** RegularExpression Id. */
  int PR_WHILE = 13;
  /** RegularExpression Id. */
  int PR_DO = 14;
  /** RegularExpression Id. */
  int PR_BREAK = 15;
  /** RegularExpression Id. */
  int PR_RETURN = 16;
  /** RegularExpression Id. */
  int PR_CASE = 17;
  /** RegularExpression Id. */
  int INCREMENT = 18;
  /** RegularExpression Id. */
  int DECREMENT = 19;
  /** RegularExpression Id. */
  int IQUAL_TO = 20;
  /** RegularExpression Id. */
  int SUM = 21;
  /** RegularExpression Id. */
  int MINUS = 22;
  /** RegularExpression Id. */
  int MULTIPLY = 23;
  /** RegularExpression Id. */
  int DEVIDE = 24;
  /** RegularExpression Id. */
  int REMEAINDER = 25;
  /** RegularExpression Id. */
  int DELIMITADOR = 26;
  /** RegularExpression Id. */
  int BRACE_OPEN = 27;
  /** RegularExpression Id. */
  int BRACE_CLOSE = 28;
  /** RegularExpression Id. */
  int PARENTHESIS_OPEN = 29;
  /** RegularExpression Id. */
  int PARENTHESIS_CLOSE = 30;
  /** RegularExpression Id. */
  int BRACKET_OPEN = 31;
  /** RegularExpression Id. */
  int BRACKET_CLOSE = 32;
  /** RegularExpression Id. */
  int ID = 33;
  /** RegularExpression Id. */
  int NUMBER = 34;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"Start\"",
    "\"End\"",
    "\"varInt\"",
    "\"varDecimal\"",
    "\"varChar\"",
    "\"if\"",
    "\"ifnot\"",
    "\"for\"",
    "\"while\"",
    "\"do\"",
    "\"break\"",
    "\"return\"",
    "\"case\"",
    "\"++\"",
    "\"--\"",
    "\"==\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<ID>",
    "<NUMBER>",
  };

}
